{"version":3,"sources":["webpack:///./src/pages/contact/index.tsx"],"names":["Index","props","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","data","form","fetch","method","headers","body","getAttribute","state","Object","keys","map","key","encodeURIComponent","join","then","navigate","catch","error","alert","isValidated","render","className","action","data-netlify","data-netlify-honeypot","onSubmit","this","type","hidden","onChange","htmlFor","id","required","React","Component"],"mappings":"8PAUqBA,E,oBACjB,WAAYC,GAAW,aACnB,cAAMA,IAAN,MAIJC,aAAe,SAACC,GAAW,MACvB,EAAKC,WAAL,MAAgBD,EAAEE,OAAOC,MAAOH,EAAEE,OAAOE,MAAzC,KANmB,EASvBC,aAAe,SAACL,GACZA,EAAEM,iBACF,IAlBQC,EAkBFC,EAAOR,EAAEE,OACfO,MAAM,IAAK,CACPC,OAAQ,OACRC,QAAS,CAAC,eAAgB,qCAC1BC,MAtBIL,EAsBS,OAAD,QACR,YAAaC,EAAKK,aAAa,SAC5B,EAAKC,OAvBbC,OAAOC,KAAKT,GACdU,KAAI,SAAAC,GAAG,OAAIC,mBAAmBD,GAAO,IAAMC,mBAAmBZ,EAAKW,OACnEE,KAAK,QAwBDC,MAAK,kBAAMC,mBAASd,EAAKK,aAAa,cACtCU,OAAM,SAAAC,GAAK,OAAIC,MAAMD,OAnB1B,EAAKV,MAAQ,CAACY,aAAa,GAFR,E,0GAwBvBC,OAAA,WACI,OACI,kBAAC,IAAD,KACI,6BAASC,UAAU,WACf,yBAAKA,UAAU,aACX,yBAAKA,UAAU,WACX,uCACA,0BACIzB,KAAK,UACLO,OAAO,OACPmB,OAAO,mBACPC,eAAa,OACbC,wBAAsB,YACtBC,SAAUC,KAAK5B,cAGf,2BAAO6B,KAAK,SAAS/B,KAAK,YAAYC,MAAM,YAC5C,yBAAK+B,QAAQ,GACT,sDACyB,IACrB,2BAAOhC,KAAK,YAAYiC,SAAUH,KAAKlC,iBAG/C,yBAAK6B,UAAU,SACX,2BAAOA,UAAU,QAAQS,QAAS,QAAlC,aAGA,yBAAKT,UAAU,WACX,2BACIA,UAAU,QACVM,KAAM,OACN/B,KAAM,OACNiC,SAAUH,KAAKlC,aACfuC,GAAI,OACJC,UAAU,MAItB,yBAAKX,UAAU,SACX,2BAAOA,UAAU,QAAQS,QAAS,SAAlC,SAGA,yBAAKT,UAAU,WACX,2BACIA,UAAU,QACVM,KAAM,QACN/B,KAAM,QACNiC,SAAUH,KAAKlC,aACfuC,GAAI,QACJC,UAAU,MAItB,yBAAKX,UAAU,SACX,2BAAOA,UAAU,QAAQS,QAAS,WAAlC,WAGA,yBAAKT,UAAU,WAC/B,8BACIA,UAAU,WACVzB,KAAM,UACNiC,SAAUH,KAAKlC,aACfuC,GAAI,UACJC,UAAU,MAIF,yBAAKX,UAAU,SACX,4BAAQA,UAAU,iBAAiBM,KAAK,UAAxC,e,GA7FDM,IAAMC","file":"component---src-pages-contact-index-tsx-01d0c41cf45bdf243131.js","sourcesContent":["import React from 'react';\nimport {navigate} from 'gatsby-link';\nimport Layout from '../../components/containers/layout/Layout';\n\nfunction encode(data: any) {\n    return Object.keys(data)\n        .map(key => encodeURIComponent(key) + '=' + encodeURIComponent(data[key]))\n        .join('&');\n}\n\nexport default class Index extends React.Component<{}> {\n    constructor(props: {}) {\n        super(props);\n        this.state = {isValidated: false};\n    }\n\n    handleChange = (e: any) => {\n        this.setState({[e.target.name]: e.target.value});\n    }\n\n    handleSubmit = (e: any) => {\n        e.preventDefault();\n        const form = e.target;\n        fetch('/', {\n            method: 'POST',\n            headers: {'Content-Type': 'application/x-www-form-urlencoded'},\n            body: encode({\n                'form-name': form.getAttribute('name'),\n                ...this.state,\n            }),\n        })\n            .then(() => navigate(form.getAttribute('action')))\n            .catch(error => alert(error));\n    }\n\n    render() {\n        return (\n            <Layout>\n                <section className=\"section\">\n                    <div className=\"container\">\n                        <div className=\"content\">\n                            <h1>Contact</h1>\n                            <form\n                                name=\"contact\"\n                                method=\"post\"\n                                action=\"/contact/thanks/\"\n                                data-netlify=\"true\"\n                                data-netlify-honeypot=\"bot-field\"\n                                onSubmit={this.handleSubmit}\n                            >\n                                {/* The `form-name` hidden field is required to support form submissions without JavaScript */}\n                                <input type=\"hidden\" name=\"form-name\" value=\"contact\"/>\n                                <div hidden={true}>\n                                    <label>\n                                        Donâ€™t fill this out:{' '}\n                                        <input name=\"bot-field\" onChange={this.handleChange}/>\n                                    </label>\n                                </div>\n                                <div className=\"field\">\n                                    <label className=\"label\" htmlFor={'name'}>\n                                        Your name\n                                    </label>\n                                    <div className=\"control\">\n                                        <input\n                                            className=\"input\"\n                                            type={'text'}\n                                            name={'name'}\n                                            onChange={this.handleChange}\n                                            id={'name'}\n                                            required={true}\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"field\">\n                                    <label className=\"label\" htmlFor={'email'}>\n                                        Email\n                                    </label>\n                                    <div className=\"control\">\n                                        <input\n                                            className=\"input\"\n                                            type={'email'}\n                                            name={'email'}\n                                            onChange={this.handleChange}\n                                            id={'email'}\n                                            required={true}\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"field\">\n                                    <label className=\"label\" htmlFor={'message'}>\n                                        Message\n                                    </label>\n                                    <div className=\"control\">\n                    <textarea\n                        className=\"textarea\"\n                        name={'message'}\n                        onChange={this.handleChange}\n                        id={'message'}\n                        required={true}\n                    />\n                                    </div>\n                                </div>\n                                <div className=\"field\">\n                                    <button className=\"button is-link\" type=\"submit\">\n                                        Send\n                                    </button>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </section>\n            </Layout>\n        );\n    }\n}\n"],"sourceRoot":""}