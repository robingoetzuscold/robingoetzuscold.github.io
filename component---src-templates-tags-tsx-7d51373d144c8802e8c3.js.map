{"version":3,"sources":["webpack:///./src/templates/tags.tsx"],"names":["TagRoute","render","postLinks","this","props","data","allMarkdownRemark","edges","map","post","key","node","fields","slug","to","className","frontmatter","title","tag","pageContext","site","siteMetadata","totalCount","tagHeader","style","marginBottom","React","Component","tagPageQuery"],"mappings":"iNA2BMA,E,gLACFC,OAAA,WACI,IACMC,EADQC,KAAKC,MAAMC,KAAKC,kBAAkBC,MACxBC,KAAI,SAAAC,GAAI,OAC5B,wBAAIC,IAAKD,EAAKE,KAAKC,OAAOC,MACtB,kBAAC,IAAD,CAAMC,GAAIL,EAAKE,KAAKC,OAAOC,MACvB,wBAAIE,UAAU,aAAaN,EAAKE,KAAKK,YAAYC,YAIvDC,EAAMf,KAAKC,MAAMe,YAAYD,IAC7BD,EAAQd,KAAKC,MAAMC,KAAKe,KAAKC,aAAaJ,MAC1CK,EAAanB,KAAKC,MAAMC,KAAKC,kBAAkBgB,WAC/CC,EAAeD,EAAN,SACI,IAAfA,EAAmB,GAAK,KADb,iBAEEJ,EAFF,IAIf,OACI,kBAAC,IAAD,KACI,6BAASH,UAAU,WACf,kBAAC,IAAD,CAAQE,MAAUC,EAAL,MAAcD,IAC3B,yBAAKF,UAAU,qBACX,yBAAKA,UAAU,WACX,yBACIA,UAAU,2BACVS,MAAO,CAACC,aAAc,SAEtB,wBAAIV,UAAU,iCAAiCQ,GAC/C,wBAAIR,UAAU,WAAWb,GACzB,2BACI,kBAAC,IAAD,CAAMY,GAAG,UAAT,0B,GA9BbY,IAAMC,WAyCd3B,YAER,IAAM4B,EAAe","file":"component---src-templates-tags-tsx-7d51373d144c8802e8c3.js","sourcesContent":["import React from 'react';\nimport {Helmet} from 'react-helmet';\nimport {Link, graphql} from 'gatsby';\nimport Layout from '../components/containers/layout/Layout';\n\ninterface TagNode {\n    node: {\n        fields: { slug: string };\n        frontmatter: { title: string };\n    };\n}\n\ninterface TagRouteProps {\n    pageContext: {\n        tag: string;\n    };\n    data: {\n        site: {\n            siteMetadata: { title: string }\n        };\n        allMarkdownRemark: {\n            totalCount: number;\n            edges: TagNode[]\n        };\n    };\n}\n\nclass TagRoute extends React.Component<TagRouteProps> {\n    render() {\n        const posts = this.props.data.allMarkdownRemark.edges;\n        const postLinks = posts.map(post => (\n            <li key={post.node.fields.slug}>\n                <Link to={post.node.fields.slug}>\n                    <h2 className=\"is-size-2\">{post.node.frontmatter.title}</h2>\n                </Link>\n            </li>\n        ));\n        const tag = this.props.pageContext.tag;\n        const title = this.props.data.site.siteMetadata.title;\n        const totalCount = this.props.data.allMarkdownRemark.totalCount;\n        const tagHeader = `${totalCount} post${\n            totalCount === 1 ? '' : 's'\n        } tagged with “${tag}”`;\n\n        return (\n            <Layout>\n                <section className=\"section\">\n                    <Helmet title={`${tag} | ${title}`}/>\n                    <div className=\"container content\">\n                        <div className=\"columns\">\n                            <div\n                                className=\"column is-10 is-offset-1\"\n                                style={{marginBottom: '6rem'}}\n                            >\n                                <h3 className=\"title is-size-4 is-bold-light\">{tagHeader}</h3>\n                                <ul className=\"taglist\">{postLinks}</ul>\n                                <p>\n                                    <Link to=\"/tags/\">Browse all tags</Link>\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </Layout>\n        );\n    }\n}\n\nexport default TagRoute;\n\nexport const tagPageQuery = graphql`\n  query TagPage($tag: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}